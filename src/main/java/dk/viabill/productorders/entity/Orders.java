package dk.viabill.productorders.entity;
// Generated Dec 8, 2018 4:40:16 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name = "Orders")
public class Orders implements java.io.Serializable {

    private int id;
    private Cutomers cutomers;
    private Date orderDate;
    private Set<OrderDetails> orderDetailses = new HashSet<OrderDetails>(0);

    public Orders() {
    }

    public Orders(int id) {
        this.id = id;
    }

    public Orders(int id, Cutomers cutomers, Date orderDate, Set<OrderDetails> orderDetailses) {
        this.id = id;
        this.cutomers = cutomers;
        this.orderDate = orderDate;
        this.orderDetailses = orderDetailses;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "customerId")
    public Cutomers getCutomers() {
        return this.cutomers;
    }

    public void setCutomers(Cutomers cutomers) {
        this.cutomers = cutomers;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "orderDate", length = 23)
    public Date getOrderDate() {
        return this.orderDate;
    }

    public void setOrderDate(Date orderDate) {
        this.orderDate = orderDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
    @Cascade(CascadeType.ALL)
    public Set<OrderDetails> getOrderDetailses() {
        return this.orderDetailses;
    }

    public void setOrderDetailses(Set<OrderDetails> orderDetailses) {
        this.orderDetailses = orderDetailses;
    }

}
